#!/usr/bin/env ruby

lib = File.expand_path(File.dirname(__FILE__) + '/../lib')
$LOAD_PATH.unshift(lib) if File.directory?(lib) && !$LOAD_PATH.include?(lib)

require 'rubygems'
require 'eventmachine'
require 'thin'
require 'optparse'
require 'lxc'
require 'lxc/server'

def terminate(message, exit_code=1)
  STDERR.puts(message)
  exit(exit_code)
end

options = {
  :bind => '0.0.0.0',
  :port => 5050
}

optparse = OptionParser.new do |opts|
  opts.on('-v', '--version', 'Show version') do
    puts LXC::VERSION
    exit
  end

  opts.on('-b', '--bind INTERFACE', 'Bind server to interface (default: 0.0.0.0)') do |v|
    options[:bind] = v
  end

  opts.on('-p', '--port PORT', 'Start server on port (default: 5050)') do |v|
    options[:port] = v
  end
end

begin
  optparse.parse!
rescue OptionParser::ParseError => e
  terminate(e.message)
end

EM.run do
  Thin::Server.start(LXC::Server, options[:bind], options[:port])
end
